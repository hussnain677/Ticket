{"version":3,"sources":["index.tsx"],"names":["NativeModules","processColor","RNCColorPicker","ColorPicker","showColorPicker","options","callback","convertedOptions","initialColor","undefined"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,YAAxB,QAA4C,cAA5C;AAEA;;;;AAqCA,MAAM;AAAEC,EAAAA;AAAF,IAAqBF,aAA3B;AAIA,MAAMG,WAAW,GAAG;AAClBC,EAAAA,eAAe,EAAE,CACfC,OADe,EAEfC,QAFe,KAGZ;AACH,UAAMC,gBAAgB,GAAG,EACvB,GAAGF,OADoB;AAEvBG,MAAAA,YAAY,EAAE,CAAAH,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEG,YAAT,IACVP,YAAY,CAACI,OAAO,CAACG,YAAT,CADF,GAEVC;AAJmB,KAAzB;AAOAP,IAAAA,cAAc,CAACE,eAAf,CACEG,gBADF,EAEED,QAAQ,GAAGA,QAAH,GAAc,MAAM,CAAE,CAFhC;AAID;AAhBiB,CAApB;AAmBA,eAAeH,WAAf","sourcesContent":["import { NativeModules, processColor } from 'react-native';\n\n/**\n * Type of option used in JS side\n */\ntype ColorPickerInputOptions = {\n  /**\n   * whether alpha is supported or not.\n   * if true, user can chose the opacity of the color\n   * @default false\n   */\n  supportsAlpha?: boolean;\n  /**\n   * initial color displayed on the picker\n   */\n  initialColor?: string;\n};\n\n/**\n * Actual options to be passed to Native Module\n */\ntype ColorPickerNativeOptions = {\n  supportsAlpha?: boolean;\n  initialColor?: number;\n};\n\ntype ColorPickerMethods = {\n  showColorPicker: (\n    /**\n     * options for color picker\n     */\n    options?: ColorPickerNativeOptions,\n    /**\n     * callback method once color is chosen\n     */\n    callback?: (color: string) => void\n  ) => void;\n};\n\nconst { RNCColorPicker } = NativeModules as {\n  RNCColorPicker: ColorPickerMethods;\n};\n\nconst ColorPicker = {\n  showColorPicker: (\n    options?: ColorPickerInputOptions,\n    callback?: (color: string) => void\n  ) => {\n    const convertedOptions = {\n      ...options,\n      initialColor: options?.initialColor\n        ? processColor(options.initialColor)\n        : undefined,\n    };\n\n    RNCColorPicker.showColorPicker(\n      convertedOptions,\n      callback ? callback : () => {}\n    );\n  },\n};\n\nexport default ColorPicker;\n"]}